:root {
  /* Color Palette (変更なし) */
  --background: lab(95% 0 -0.01);
  --foreground: #ffffff;
  --text-primary: #1a202c;
  --text-secondary: #718096;
  --border-color: #e2e8f0;
  
  --primary-color: #3182ce;
  --primary-color-hover: #2b6cb0;
  --danger-color: #e53e3e;
  --danger-color-hover: #c53030;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  color: var(--text-primary);
  background-color: var(--background);
}

a {
  color: inherit;
  text-decoration: none;
}

.container {
  display: flex;
  height: 100vh;
}

.sidebar {
  width: 280px;
  flex-shrink: 0;
}

.mainContent {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

/* 👇 [修正点] paddingをよりコンパクトに調整 */
.fixedHeader {
  flex-shrink: 0;
  padding: 1rem 2rem; /* 上下の余白を 1.5rem から 1rem に変更 */
  background-color: var(--foreground);
  border-bottom: 1px solid var(--border-color);
  z-index: 20;
}

.scrollableArea {
  flex: 1;
  overflow-y: auto;
  padding: 0.5rem;
}

.fixedFormArea {
  flex-shrink: 0;
  padding: 1rem 2rem;
  background-color: var(--background);
  border-top: 1px solid var(--border-color);
}

/* 👇 [追加] モバイル表示用のスタイル */
@media (max-width: 768px) {
  .sidebar {
    display: none; /* PC用のサイドバーは非表示に */
  }
  .fixedHeader, .scrollableArea, .fixedFormArea {
    padding-left: 1rem; /* スマホ用に左右の余白を調整 */
    padding-right: 1rem;
  }
}

.mobileSidebarOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 99;
}

.mobileSidebar {
  position: fixed;
  top: 0;
  left: 0;
  width: 280px;
  height: 100%;
  background-color: var(--foreground);
  z-index: 100;
  transform: translateX(-100%);
  transition: transform 0.3s ease-in-out;
}

.mobileSidebar.isOpen {
  transform: translateX(0);
}

@media (min-width: 769px) {
  .mobileSidebar, .mobileSidebarOverlay {
    display: none; /* PC表示では隠す */
  }
}

/* 👇 [追記] ローディング画面用のスタイル */
.loadingScreen {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  width: 100vw;
  background-color: var(--background);
}

.loadingIcon {
  font-size: 2rem;
  color: var(--text-secondary);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}